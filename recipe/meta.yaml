{% set version = "1.7.0.1" %}
{% set cuda_major = "12" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: cutensor
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/{{ platform }}/libcutensor-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: dd3557891371a19e73e7c955efe5383b0bee954aba6a30e4892b0e7acb9deb26  # [linux64]
  sha256: af4ad5e29dcb636f1bf941ed1fd7fc8053eeec4813fbc0b41581e114438e84c8  # [ppc64le]
  sha256: c31f8e4386539434a5d1643ebfed74572011783b4e21b62be52003e3a9de3720  # [aarch64]
  sha256: cdbb53bcc1c7b20ee0aa2dee781644a324d2d5e8065944039024fe22d6b822ab  # [win64]

build:
  number: 1
  # cuTENSOR v1.3.1 supports CUDA 10.2, 11.0, and 11.1+
  # this recipe only supports CUDA 12; the other CUDA versions are in the cuda-11 branch
  skip: true  # [win32 or osx]
  script:
    - mkdir -p $PREFIX/include                                             # [linux]
    - mv include/* $PREFIX/include/                                        # [linux]
    - mkdir -p $PREFIX/lib                                                 # [linux]
    - mv lib/{{ cuda_major }}/*.so* $PREFIX/lib/                           # [linux]
    - patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so        # [ppc64le]

    - copy include\\cutensor.h %LIBRARY_INC%\\                             # [win64]
    - copy include\\cutensorMg.h %LIBRARY_INC%\\                           # [win64]
    - mkdir %LIBRARY_INC%\\cutensor                                        # [win64]
    - copy include\\cutensor\\types.h %LIBRARY_INC%\\cutensor              # [win64]
    - del lib\\{{ cuda_major }}\\*static*                                  # [win64]
    - copy lib\\{{ cuda_major }}\\*.dll %LIBRARY_BIN%\\                    # [win64]
    - copy lib\\{{ cuda_major }}\\*.lib %LIBRARY_LIB%\\                    # [win64]
  run_exports:
    - {{ pin_subpackage('cutensor') }}
  missing_dso_whitelist:
    # suppress warning, as these are included in the run dependency
    - '*/libcublasLt.so*'  # [linux]
    - '*/cublasLt64*.dll'  # [win64]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - arm-variant * {{ arm_variant_type }}  # [aarch64]
    - sysroot_{{ target_platform }} 2.17    # [linux64]
  host:
    - patchelf >=0.12  # [linux]
    - cuda-version {{ cuda_major }}.0
  run:
    - {{ pin_compatible("cuda-version", max_pin="x") }}
    - libcublas
  run_constrained:
    # Only GLIBC_2.17 or older symbols present
    - __glibc >=2.17      # [linux]
    - arm-variant * {{ arm_variant_type }}  # [aarch64]

test:
  requires:
    - git
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - sysroot_{{ target_platform }} 2.17  # [linux]
  files:
    - test_load_elf.c        # [linux]

about:
  home: https://developer.nvidia.com/cutensor
  license: LicenseRef-cuTENSOR-Software-License-Agreement
  license_url: https://docs.nvidia.com/cuda/cutensor/license.html
  license_file: LICENSE
  summary: Tensor Linear Algebra on NVIDIA GPUs
  description: |
    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear
    algebra library providing tensor contraction, reduction and elementwise
    operations. cuTENSOR is used to accelerate applications in the areas of
    deep learning training and inference, computer vision, quantum chemistry
    and computational physics.

    License Agreements:- The packages are governed by the NVIDIA cuTENSOR
    Software License Agreement (EULA). By downloading and using the packages,
    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -
    https://docs.nvidia.com/cuda/cutensor/license.html
  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html
  dev_url: https://developer.nvidia.com/cutensor/downloads

extra:
  recipe-maintainers:
    - JeremyWangNVDA
    - leofang
    - jakirkham
    - mtjrider
